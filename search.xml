[{"title":"android开发——环境搭建","url":"http://thirtyyuan.github.io/2016/07/07/android开发——环境搭建/","content":"<p>放张stormzhang亲笔写的话和签名镇楼：<br><img src=\"https://cloud.githubusercontent.com/assets/16081968/16676550/d3971168-44fd-11e6-87ad-a3a3f640c4b3.png\" alt=\"stormzhang\"></p>\n<h2 id=\"Java开发环境配置\"><a href=\"#Java开发环境配置\" class=\"headerlink\" title=\" Java开发环境配置 \"></a><strong> Java开发环境配置 </strong></h2><p>JDK是java开发包的缩写，是整个Java的核心，包括了Java运行环境、Java工具和Java基础类库（待会使用的java命令就在里面）。</p>\n<p>到Oracle官网，选择相应系统版本的JDK(Mac自带JDK版本过低)，并勾选下载jdk框头的<code>Accept License Agreement</code>，<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\" rel=\"external\">JDK下载地址</a>，下载完成后安装。</p>\n<h5 id=\"Mac-OS\"><a href=\"#Mac-OS\" class=\"headerlink\" title=\" Mac OS \"></a><strong> Mac OS </strong></h5><p>查看当前java版本：（系统已经集成JDK，但版本较低，需要重新配置）打开“终端（Terminal）”，输入<code>java -version</code>（有空格），若显示<code>java version 1.8.0_xxx</code>则无需配置，直接看开发部分；<br>安装：点下一步就好；<br>配置环境变量：无需配置，但必须知道JDK安装位置在(/Macintosh HD由于是根目录，一般写~)：<code>~/Library/Java/JavaVirtualMahines</code></p>\n<h5 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\" Windows \"></a><strong> Windows </strong></h5><p>请参考下面链接，注意配置“path变量”、“classpath变量”的是系统变量，不是用户变量！以及每一个标点不要乱打多打。不懂就问是在图财害命，不懂就搜索才是程序员。<a href=\"http://jingyan.baidu.com/article/ab69b270c01a4d2ca7189f8c.html\" target=\"_blank\" rel=\"external\">windows java环境变量配置</a></p>\n<h2 id=\"Java开发工具\"><a href=\"#Java开发工具\" class=\"headerlink\" title=\" Java开发工具 \"></a><strong> Java开发工具 </strong></h2><p>稍懂一点的同学可能会问：什么？就可以了？不是听说要用Eclipse(一款强大的IDE（集成开发环境）)开发吗？答：以学习android所需要的java基础，还用不上那么强大的企业级开发工具。现在需要的只有两样东西：命令行＋文本编辑器。这种java开发方式适合小型项目和练习使用，既经济环保，又高效迅捷，最重要的是能帮助初学者了解java项目的编译过程。</p>\n<h5 id=\"Mac-OS-1\"><a href=\"#Mac-OS-1\" class=\"headerlink\" title=\" Mac OS \"></a><strong> Mac OS </strong></h5><p>推荐使用“Sublime Text”，注意创建新文本后(command + N)，首行即为文件名，如创建“Test.java”文件，首行输入<code>Test.java</code>后按下 “command + S” ，文件即被创建。但是在编译前必须将该行删除，否则会被认为是代码的一部分而报错。</p>\n<h5 id=\"Windows-1\"><a href=\"#Windows-1\" class=\"headerlink\" title=\" Windows \"></a><strong> Windows </strong></h5><p>推荐使用“notepad++”，新建后即可开始写出java代码，保存时将文件名后缀改为 “.java” 文件即可。</p>\n<p>至于如何编译java文件，就是之后要去自学的事了，推荐mars老师的《java4android》视频教程，看视频时注意多敲多想，不懂的地方可以自己敲代码验证，懂的地方可以敲快一点。</p>\n<h2 id=\"Android开发环境搭建\"><a href=\"#Android开发环境搭建\" class=\"headerlink\" title=\" Android开发环境搭建 \"></a><strong> Android开发环境搭建 </strong></h2><p>Android studio2.0（Win和Mac都有) :<a href=\"http://pan.baidu.com/s/1b1031s\" target=\"_blank\" rel=\"external\">下载地址</a> 密码: c77r<br>    你可能听过可以使用Eclipse的ADT(android development tools)插件进行安卓开发，但那已经过时了，Google已经停止提供对Eclipse的ADT支持，已经无法在最新的android系统下进行开发。现在Google推出的android studio已经成为了android开发的主流IDE，前不久刚升级android studio2.0版本，只是新功能对国内开发者来说…有点尴尬，详情请看<a href=\"http://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&amp;mid=2650661399&amp;idx=1&amp;sn=877894e93b57e152dc794dae5b382538&amp;scene=23&amp;srcid=0429Yt0RIHcAHyZ7jGhbOq04#rd\" target=\"_blank\" rel=\"external\">stormzhang谈 AS 2.0</a><br><img src=\"https://cloud.githubusercontent.com/assets/16081968/16676818/76aad4f4-4501-11e6-88b5-9e72e7df5fd1.png\" alt=\"AS 2.0\"></p>\n<ol>\n<li><p><strong> 新建项目 </strong></p>\n<p> 还是请看stormzhang博客，但是在下载SDK那步，能不下就不下，因为是要到Google的服务器下载，你懂的，不过不用担心，前几天帮同学装时似乎是不需要翻墙了，就算需要我也有办法帮你解决。新建项目过程请看：<a href=\"http://stormzhang.com/devtools/2014/11/25/android-studio-tutorial1/\" target=\"_blank\" rel=\"external\">AS 系列教程</a></p>\n</li>\n<li><p><strong> 使用镜像服务器 </strong></p>\n<p> SDK等默认从Google服务器下载，慢和翻墙是必须的，使用镜像服务器就可以解决这种问题。使用方法和地址: <a href=\"http://tools.android-studio.org/index.php/85-tools/110-androidsdk-mirrors\" target=\"_blank\" rel=\"external\">Android SDK 在线更新镜像</a>。注意: <code>Http proxy</code> 找不到在哪，可以打开<code>preference</code>，搜索框输入<code>proxy</code> ，如下图左上角：<br> <img src=\"https://cloud.githubusercontent.com/assets/16081968/16676974/f2de6422-4502-11e6-8c2d-25c3a040b058.png\" alt=\"http porxy\">,之后就开始学习开发app吧！</p>\n</li>\n</ol>\n<p>最后，既然选择了开始，那就坚持每天学习、进步一点点，下个CSDN、逛逛gank.io(有妹子图福利)，fork个Github，关注几个大牛开发者，加个优质群看看别人讨论的问题，学习material design设计规范，学习用面向对象思想思考身边的问题，这些教你的绝对比我能教你的多，为了我们所热爱的一切，怀挺！</p>\n"},{"title":"你好，世界。","url":"http://thirtyyuan.github.io/2016/07/06/hello-world/","content":"<p>虽然很不想用这个万人用过的标题作为标题，但似乎没有一个问候语能比它跟简洁有力。</p>\n<p>这次我把博客挪了个窝，学习做一些简单的前端是一个目的，更重要的是，我可以随意更改我文章所依托的平台的样式及内容了。我之前尝试过 Github Issue 作博客，相当的简洁方便，酷爱至极。但慢慢的，它的一些不足暴露了出来。可能观众都不在意，但是你确实没办法 DIY 一个你喜欢的阅读界面给他们，每次打开，我必须得忍受那些我不喜欢的界面。</p>\n<p>由于理念差异太大，既喜欢带着简洁美感去阅读，又喜欢看到别人的评论并与之交流，所以有了现在你所看到的我的博客。当然，之后我会教各位如何搭建基于 Github Pages 的个人博客，网上也有很全的教程，我主要把我踩的坑的解决方法分享出来。</p>\n<p>明天是你喜欢的日子，但是为了之后的惊喜，暂时不告诉你了:P</p>\n"},{"title":"about","url":"http://thirtyyuan.github.io/about/index.html","content":""},{"title":"RSS","url":"http://thirtyyuan.github.io/RSS/index.html","content":""},{"title":"category","url":"http://thirtyyuan.github.io/category/index.html","content":""},{"title":"link","url":"http://thirtyyuan.github.io/link/index.html","content":""},{"title":"project","url":"http://thirtyyuan.github.io/project/index.html","content":""},{"title":"search","url":"http://thirtyyuan.github.io/search/index.html","content":""},{"title":"tag","url":"http://thirtyyuan.github.io/tag/index.html","content":""}]