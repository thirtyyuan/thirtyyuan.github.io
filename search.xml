[{"title":"Android 6.0运行时权限实例讲解","url":"http://thirtyyuan.github.io/2016/07/29/Android-6-0运行时权限实例讲解/","content":"<h2 id=\"为什么写这篇文章\"><a href=\"#为什么写这篇文章\" class=\"headerlink\" title=\"为什么写这篇文章\"></a>为什么写这篇文章</h2><p>今天总算是到达了会用 runtime permission 的阶段了，之前我是很惧怕需要用到 runtime permission 的，因为尝试了几次都以失败告终，网上大部分教程都深涩难懂，甚至中文比英文难懂。但是因为权限问题而不能真机调试，真的很痛苦，今天正好解决了这个小问题，于是打算从新手（我）的角度写篇文章总结下，帮助大家尽快学会 runtime permission 的使用。</p>\n<h2 id=\"什么是-runtime-permission\"><a href=\"#什么是-runtime-permission\" class=\"headerlink\" title=\"什么是 runtime permission\"></a>什么是 runtime permission</h2><p>官方文档解释：「从 android 6.0 开始，用户授予应用的权限不是在安装应用时授予，而是在应用运行时，需要用到该权限时授予」，如下图:<br><img src=\"http://ww1.sinaimg.cn/large/006tNbRwgw1f6at9zc0otj30qo0fkabo.jpg\" alt=\"android 权限授予差别\"><br>简单的说，应用所需要的权限授予不再是流氓的让用户在安装应用时全盘接受，否则无法安装该应用，而是在用户使用该应用的某项功能时，明显的弹窗询问用户是否允许应用获取该功能所需要的权限。总之，它是为了让 android 6.0 以上的系统更安全而生的。</p>\n<h2 id=\"为什么要会用-runtime-permission\"><a href=\"#为什么要会用-runtime-permission\" class=\"headerlink\" title=\"为什么要会用 runtime permission\"></a>为什么要会用 runtime permission</h2><ol>\n<li>作为开发者，应该尽可能为用户着想，给用户最安全、最舒适的体验，因此我们应该避免流氓的让用户在安装应用时必须同意，否则不给用户使用应用；</li>\n<li>不使用 runtime permission 的应用有极大可能在使用需要权限的功能时引起应用奔溃。具体原因（见文末第二个参考链接）不再分析，总之请尽快学习使用 runtime permission ，为你的职业操守和情怀加分，不将就！</li>\n</ol>\n<h2 id=\"实现思路分析\"><a href=\"#实现思路分析\" class=\"headerlink\" title=\"实现思路分析\"></a>实现思路分析</h2><p>这里以获取定位权限后进行定位操作为例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">public void MainActivity extands Activity &#123;</div><div class=\"line\"></div><div class=\"line\">\t//自定义权限请求码，以便于后面对请求码对应的权限作出反应</div><div class=\"line\">\tpublic static final int LOCATION_REQUEST_CODE = 7 ;</div><div class=\"line\">\t</div><div class=\"line\">\t@Override</div><div class=\"line\">\tprotected void onCreate(Bundle savedInstanceState) &#123;</div><div class=\"line\">\t\tsuper.onCreate(savedInstanceState);</div><div class=\"line\">\t\tsetContentView(R.layout.activity_main)</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tif (SDKVersion &lt; 23) &#123;</div><div class=\"line\">\t\t\t//直接进行权限已经被授予后的操作，如；</div><div class=\"line\">\t\t\tlocationProvider();</div><div class=\"line\">\t\t&#125; else &#123;</div><div class=\"line\">\t\t\t//检查权限是否已经授予</div><div class=\"line\">\t\t\tif (granted) &#123;</div><div class=\"line\">\t\t\t\t//进行权限已被授予后的操作，如；</div><div class=\"line\">\t\t\t\tlocationProvider();</div><div class=\"line\">\t\t\t&#125; else &#123;</div><div class=\"line\">\t\t\t\t//请求授予权限</div><div class=\"line\">\t\t\t\trequestPermission(...);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>无论权限被同意还是拒绝，系统都会回调这个方法,有必要的话可以用它来通知用户权限授予的结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">public void MainActivity extands Activity &#123;</div><div class=\"line\"></div><div class=\"line\">\t//上面代码相同，省略</div><div class=\"line\">\t...</div><div class=\"line\">\t</div><div class=\"line\">\t@Override</div><div class=\"line\">    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) &#123;</div><div class=\"line\">    \tswitch (requestCode) &#123;</div><div class=\"line\">\t\t\tcase LOCATION_REQUEST_CODE:</div><div class=\"line\">    \t    \t//如果权限请求被拒绝，则 grantResults 通常为空</div><div class=\"line\">    \t        if (grantResults[0] == PackageManager.PERMISSION_GRANTED) &#123;</div><div class=\"line\">   \t             \t// 进行权限已被授予后的操作，如：</div><div class=\"line\">   \t            \t locationProvider();</div><div class=\"line\">   \t         \t&#125; else &#123;</div><div class=\"line\">  \t            \t// 权限未被授予时的操作，如：</div><div class=\"line\">   \t            \tToast.makeText(MainActivity.this, &quot;OH...Permission has been Denied.&quot;, Toast.LENGTH_SHORT).show();</div><div class=\"line\">          \t\t&#125;</div><div class=\"line\">   \t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在 activity 销毁时对已获取的权限操作进行销毁，如此处我们调用的 locationManager：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Override</div><div class=\"line\">protected  void onDestroy() &#123;</div><div class=\"line\">\tsuper.onDestroy();</div><div class=\"line\">\tif (locationManager != null) &#123;</div><div class=\"line\">\t\tlocationManager.removeUpdates(locationListener);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>最后，别忘记在 AndroidManifest.xml 中注册权限：<br><code>&lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot;/&gt;</code><br>觉得有用的话，欢迎关注、评论及 Github 上的follow、star :P</p>\n<p>实例代码：<a href=\"https://github.com/thirtyyuan/Android-exercise/tree/master/Runtime%20Permission\" target=\"_blank\" rel=\"external\">LocationTest</a></p>\n<p>参考资料：Google android 官方文档：<a href=\"https://developer.android.com/training/permissions/requesting.html\" target=\"_blank\" rel=\"external\">Requesting Permissions at Run Time</a>；郭霖大神的「第一行代码」及<a href=\"http://chuansong.me/n/355262951150\" target=\"_blank\" rel=\"external\">「教你如何在Android 6.0上创建系统悬浮窗」</a>；微凉一季的<a href=\"http://jijiaxin89.com/2015/08/30/Android-s-Runtime-Permission/\" target=\"_blank\" rel=\"external\">「Android M 新的运行时权限开发者需要知道的一切」</a></p>\n<p>其他推荐：郭霖的<a href=\"http://blog.csdn.net/guolin_blog/article/details/51336415\" target=\"_blank\" rel=\"external\">「Android提醒微技巧，你真的了解Dialog、Toast和Snackbar吗？」</a></p>\n"},{"title":"我曾咬过一口苹果","url":"http://thirtyyuan.github.io/2016/07/27/我曾咬过一口苹果/","content":"<p>我曾咬过一口苹果<br>与你成为朋友<br>在蔬果纷繁的园子里<br>同你追求超脱<br>将爱果寻觅<br>那一刻的疯狂<br>只因你</p>\n<p>我曾咬过一口苹果<br>与你成为朋友<br>在静谧空阔的深空里<br>同你畅谈漫想<br>将引力挥舞<br>那一刻的思念<br>只为你</p>\n<p>我曾咬过一口苹果<br>与你成为朋友<br>在战火纷飞的岁月里<br>同你心心相惜<br>将世俗摒弃<br>那一世的错过<br>是爱你</p>\n<p>我曾咬过一口苹果<br>与你成为朋友<br>在东山逝去的时光里<br>同你漫步巴黎<br>将奇迹再造<br>那一世的荣光<br>是你</p>\n<p>我曾咬过一口苹果<br>与你成为朋友<br>在青春易逝的年华里<br>同你踏着彩云<br>将人生历经<br>那永生的誓言<br>因为爱你</p>\n<p>for Qi ——thirtyyuan</p>\n"},{"title":"android开发——环境搭建","url":"http://thirtyyuan.github.io/2016/07/07/android开发——环境搭建/","content":"<p>放张stormzhang亲笔写的话和签名镇楼：<br><img src=\"https://cloud.githubusercontent.com/assets/16081968/16676550/d3971168-44fd-11e6-87ad-a3a3f640c4b3.png\" alt=\"stormzhang\"></p>\n<h2 id=\"Java开发环境配置\"><a href=\"#Java开发环境配置\" class=\"headerlink\" title=\" Java开发环境配置 \"></a><strong> Java开发环境配置 </strong></h2><p>JDK是java开发包的缩写，是整个Java的核心，包括了Java运行环境、Java工具和Java基础类库（待会使用的java命令就在里面）。</p>\n<p>到Oracle官网，选择相应系统版本的JDK(Mac自带JDK版本过低)，并勾选下载jdk框头的<code>Accept License Agreement</code>，<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\" rel=\"external\">JDK下载地址</a>，下载完成后安装。</p>\n<h5 id=\"Mac-OS\"><a href=\"#Mac-OS\" class=\"headerlink\" title=\" Mac OS \"></a><strong> Mac OS </strong></h5><p>查看当前java版本：（系统已经集成JDK，但版本较低，需要重新配置）打开“终端（Terminal）”，输入<code>java -version</code>（有空格），若显示<code>java version 1.8.0_xxx</code>则无需配置，直接看开发部分；<br>安装：点下一步就好；<br>配置环境变量：无需配置，但必须知道JDK安装位置在(/Macintosh HD由于是根目录，一般写~)：<code>~/Library/Java/JavaVirtualMahines</code></p>\n<h5 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\" Windows \"></a><strong> Windows </strong></h5><p>请参考下面链接，注意配置“path变量”、“classpath变量”的是系统变量，不是用户变量！以及每一个标点不要乱打多打。不懂就问是在图财害命，不懂就搜索才是程序员。<a href=\"http://jingyan.baidu.com/article/ab69b270c01a4d2ca7189f8c.html\" target=\"_blank\" rel=\"external\">windows java环境变量配置</a></p>\n<h2 id=\"Java开发工具\"><a href=\"#Java开发工具\" class=\"headerlink\" title=\" Java开发工具 \"></a><strong> Java开发工具 </strong></h2><p>稍懂一点的同学可能会问：什么？就可以了？不是听说要用Eclipse(一款强大的IDE（集成开发环境）)开发吗？答：以学习android所需要的java基础，还用不上那么强大的企业级开发工具。现在需要的只有两样东西：命令行＋文本编辑器。这种java开发方式适合小型项目和练习使用，既经济环保，又高效迅捷，最重要的是能帮助初学者了解java项目的编译过程。</p>\n<h5 id=\"Mac-OS-1\"><a href=\"#Mac-OS-1\" class=\"headerlink\" title=\" Mac OS \"></a><strong> Mac OS </strong></h5><p>推荐使用“Sublime Text”，注意创建新文本后(command + N)，首行即为文件名，如创建“Test.java”文件，首行输入<code>Test.java</code>后按下 “command + S” ，文件即被创建。但是在编译前必须将该行删除，否则会被认为是代码的一部分而报错。</p>\n<h5 id=\"Windows-1\"><a href=\"#Windows-1\" class=\"headerlink\" title=\" Windows \"></a><strong> Windows </strong></h5><p>推荐使用“notepad++”，新建后即可开始写出java代码，保存时将文件名后缀改为 “.java” 文件即可。</p>\n<p>至于如何编译java文件，就是之后要去自学的事了，推荐mars老师的《java4android》视频教程，看视频时注意多敲多想，不懂的地方可以自己敲代码验证，懂的地方可以敲快一点。</p>\n<h2 id=\"Android开发环境搭建\"><a href=\"#Android开发环境搭建\" class=\"headerlink\" title=\" Android开发环境搭建 \"></a><strong> Android开发环境搭建 </strong></h2><p>Android studio2.0（Win和Mac都有) :<a href=\"http://pan.baidu.com/s/1b1031s\" target=\"_blank\" rel=\"external\">下载地址</a> 密码: c77r<br>    你可能听过可以使用Eclipse的ADT(android development tools)插件进行安卓开发，但那已经过时了，Google已经停止提供对Eclipse的ADT支持，已经无法在最新的android系统下进行开发。现在Google推出的android studio已经成为了android开发的主流IDE，前不久刚升级android studio2.0版本，只是新功能对国内开发者来说…有点尴尬，详情请看<a href=\"http://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&amp;mid=2650661399&amp;idx=1&amp;sn=877894e93b57e152dc794dae5b382538&amp;scene=23&amp;srcid=0429Yt0RIHcAHyZ7jGhbOq04#rd\" target=\"_blank\" rel=\"external\">stormzhang谈 AS 2.0</a><br><img src=\"https://cloud.githubusercontent.com/assets/16081968/16676818/76aad4f4-4501-11e6-88b5-9e72e7df5fd1.png\" alt=\"AS 2.0\"></p>\n<ol>\n<li><p><strong> 新建项目 </strong></p>\n<p> 还是请看stormzhang博客，但是在下载SDK那步，能不下就不下，因为是要到Google的服务器下载，你懂的，不过不用担心，前几天帮同学装时似乎是不需要翻墙了，就算需要我也有办法帮你解决。新建项目过程请看：<a href=\"http://stormzhang.com/devtools/2014/11/25/android-studio-tutorial1/\" target=\"_blank\" rel=\"external\">AS 系列教程</a></p>\n</li>\n<li><p><strong> 使用镜像服务器 </strong></p>\n<p> SDK等默认从Google服务器下载，慢和翻墙是必须的，使用镜像服务器就可以解决这种问题。使用方法和地址: <a href=\"http://tools.android-studio.org/index.php/85-tools/110-androidsdk-mirrors\" target=\"_blank\" rel=\"external\">Android SDK 在线更新镜像</a>。注意: <code>Http proxy</code> 找不到在哪，可以打开<code>preference</code>，搜索框输入<code>proxy</code> ，如下图左上角：<br> <img src=\"https://cloud.githubusercontent.com/assets/16081968/16676974/f2de6422-4502-11e6-8c2d-25c3a040b058.png\" alt=\"http porxy\">,之后就开始学习开发app吧！</p>\n</li>\n</ol>\n<p>最后，既然选择了开始，那就坚持每天学习、进步一点点，下个CSDN、逛逛gank.io(有妹子图福利)，fork个Github，关注几个大牛开发者，加个优质群看看别人讨论的问题，学习material design设计规范，学习用面向对象思想思考身边的问题，这些教你的绝对比我能教你的多，为了我们所热爱的一切，怀挺！</p>\n"},{"title":"你好，世界。","url":"http://thirtyyuan.github.io/2016/07/06/hello-world/","content":"<p>虽然很不想用这个万人用过的标题作为标题，但似乎没有一个问候语能比它跟简洁有力。</p>\n<p>这次我把博客挪了个窝，学习做一些简单的前端是一个目的，更重要的是，我可以随意更改我文章所依托的平台的样式及内容了。我之前尝试过 Github Issue 作博客，相当的简洁方便，酷爱至极。但慢慢的，它的一些不足暴露了出来。可能观众都不在意，但是你确实没办法 DIY 一个你喜欢的阅读界面给他们，每次打开，我必须得忍受那些我不喜欢的界面。</p>\n<p>由于理念差异太大，既喜欢带着简洁美感去阅读，又喜欢看到别人的评论并与之交流，所以有了现在你所看到的我的博客。当然，之后我会教各位如何搭建基于 Github Pages 的个人博客，网上也有很全的教程，我主要把我踩的坑的解决方法分享出来。</p>\n<p>明天是你喜欢的日子，但是为了之后的惊喜，暂时不告诉你了:P</p>\n"},{"title":"RSS","url":"http://thirtyyuan.github.io/RSS/index.html","content":""},{"title":"category","url":"http://thirtyyuan.github.io/category/index.html","content":""},{"title":"about","url":"http://thirtyyuan.github.io/about/index.html","content":""},{"title":"link","url":"http://thirtyyuan.github.io/link/index.html","content":""},{"title":"project","url":"http://thirtyyuan.github.io/project/index.html","content":""},{"title":"search","url":"http://thirtyyuan.github.io/search/index.html","content":""},{"title":"tag","url":"http://thirtyyuan.github.io/tag/index.html","content":""}]