<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>thirtyyuan&#39;s Den</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://thirtyyuan.github.io/"/>
  <updated>2016-10-29T16:19:38.000Z</updated>
  <id>http://thirtyyuan.github.io/</id>
  
  <author>
    <name>thirtyyuan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>android 手机刷机教程</title>
    <link href="http://thirtyyuan.github.io/2016/10/30/android-%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B%E2%80%94%E2%80%94%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA2/"/>
    <id>http://thirtyyuan.github.io/2016/10/30/android-刷机教程——一加手机2/</id>
    <published>2016-10-29T16:29:00.000Z</published>
    <updated>2016-10-29T16:19:38.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>以上是摘要
</code></pre><a id="more"></a>
<pre><code>以下是余下全文 
</code></pre>]]></content>
    
    <summary type="html">
    
      关于 android 如何刷第三方 ROM 的教程，针对 android 开发者或懂得使用 ADB 的人。
    
    </summary>
    
      <category term="刷机" scheme="http://thirtyyuan.github.io/categories/%E5%88%B7%E6%9C%BA/"/>
    
    
      <category term="android" scheme="http://thirtyyuan.github.io/tags/android/"/>
    
      <category term="刷机" scheme="http://thirtyyuan.github.io/tags/%E5%88%B7%E6%9C%BA/"/>
    
      <category term="ROM" scheme="http://thirtyyuan.github.io/tags/ROM/"/>
    
  </entry>
  
  <entry>
    <title>Android 6.0 Permission</title>
    <link href="http://thirtyyuan.github.io/2016/07/29/Android-6-0-Permission/"/>
    <id>http://thirtyyuan.github.io/2016/07/29/Android-6-0-Permission/</id>
    <published>2016-07-29T11:50:50.000Z</published>
    <updated>2016-10-29T16:34:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么写这篇文章"><a href="#为什么写这篇文章" class="headerlink" title="为什么写这篇文章"></a>为什么写这篇文章</h2><p>今天总算是到达了会用 runtime permission 的阶段了，之前我是很惧怕需要用到 runtime permission 的，因为尝试了几次都以失败告终，网上大部分教程都深涩难懂，甚至中文比英文难懂。<a id="more"></a>但是因为权限问题而不能真机调试，真的很痛苦，今天正好解决了这个小问题，于是打算从新手（我）的角度写篇文章总结下，帮助大家尽快学会 runtime permission 的使用。</p>
<h2 id="什么是-runtime-permission"><a href="#什么是-runtime-permission" class="headerlink" title="什么是 runtime permission"></a>什么是 runtime permission</h2><p>官方文档解释：「从 android 6.0 开始，用户授予应用的权限不是在安装应用时授予，而是在应用运行时，需要用到该权限时授予」，如下图:<br><img src="http://ww1.sinaimg.cn/large/006tNbRwgw1f6at9zc0otj30qo0fkabo.jpg" alt="android 权限授予差别"><br>简单的说，应用所需要的权限授予不再是流氓的让用户在安装应用时全盘接受，否则无法安装该应用，而是在用户使用该应用的某项功能时，明显的弹窗询问用户是否允许应用获取该功能所需要的权限。总之，它是为了让 android 6.0 以上的系统更安全而生的。</p>
<h2 id="为什么要会用-runtime-permission"><a href="#为什么要会用-runtime-permission" class="headerlink" title="为什么要会用 runtime permission"></a>为什么要会用 runtime permission</h2><ol>
<li>作为开发者，应该尽可能为用户着想，给用户最安全、最舒适的体验，因此我们应该避免流氓的让用户在安装应用时必须同意，否则不给用户使用应用；</li>
<li>不使用 runtime permission 的应用有极大可能在使用需要权限的功能时引起应用奔溃。具体原因（见文末第二个参考链接）不再分析，总之请尽快学习使用 runtime permission ，为你的职业操守和情怀加分，不将就！</li>
</ol>
<h2 id="实现思路分析"><a href="#实现思路分析" class="headerlink" title="实现思路分析"></a>实现思路分析</h2><p>这里以获取定位权限后进行定位操作为例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">public void MainActivity extands Activity &#123;</div><div class="line"></div><div class="line">	//自定义权限请求码，以便于后面对请求码对应的权限作出反应</div><div class="line">	public static final int LOCATION_REQUEST_CODE = 7 ;</div><div class="line">	</div><div class="line">	@Override</div><div class="line">	protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">		super.onCreate(savedInstanceState);</div><div class="line">		setContentView(R.layout.activity_main)</div><div class="line">		</div><div class="line">		if (SDKVersion &lt; 23) &#123;</div><div class="line">			//直接进行权限已经被授予后的操作，如；</div><div class="line">			locationProvider();</div><div class="line">		&#125; else &#123;</div><div class="line">			//检查权限是否已经授予</div><div class="line">			if (granted) &#123;</div><div class="line">				//进行权限已被授予后的操作，如；</div><div class="line">				locationProvider();</div><div class="line">			&#125; else &#123;</div><div class="line">				//请求授予权限</div><div class="line">				requestPermission(...);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>无论权限被同意还是拒绝，系统都会回调这个方法,有必要的话可以用它来通知用户权限授予的结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">public void MainActivity extands Activity &#123;</div><div class="line"></div><div class="line">	//上面代码相同，省略</div><div class="line">	...</div><div class="line">	</div><div class="line">	@Override</div><div class="line">    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) &#123;</div><div class="line">    	switch (requestCode) &#123;</div><div class="line">			case LOCATION_REQUEST_CODE:</div><div class="line">    	    	//如果权限请求被拒绝，则 grantResults 通常为空</div><div class="line">    	        if (grantResults[0] == PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">   	             	// 进行权限已被授予后的操作，如：</div><div class="line">   	            	 locationProvider();</div><div class="line">   	         	&#125; else &#123;</div><div class="line">  	            	// 权限未被授予时的操作，如：</div><div class="line">   	            	Toast.makeText(MainActivity.this, &quot;OH...Permission has been Denied.&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">          		&#125;</div><div class="line">   		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在 activity 销毁时对已获取的权限操作进行销毁，如此处我们调用的 locationManager：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">protected  void onDestroy() &#123;</div><div class="line">	super.onDestroy();</div><div class="line">	if (locationManager != null) &#123;</div><div class="line">		locationManager.removeUpdates(locationListener);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最后，别忘记在 AndroidManifest.xml 中注册权限：<br><code>&lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot;/&gt;</code><br>觉得有用的话，欢迎关注、评论及 Github 上的follow、star :P</p>
<hr>
<ul>
<li>07/31/2016 16:55 <h4 id="更新：新增多权限请求同时申请："><a href="#更新：新增多权限请求同时申请：" class="headerlink" title="更新：新增多权限请求同时申请："></a>更新：新增多权限请求同时申请：</h4>先在manifest中注册以下权限，再将checkPermission()改为如下内容</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">public void checkPermission()&#123;</div><div class="line">	//判断当前Activity是否已经获得了以下权限</div><div class="line">	if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED</div><div class="line">    		|| ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">            requestMultiplePermissions();</div><div class="line">        &#125; else &#123;</div><div class="line">            locationProvider();</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>注意观察 requestPermission() 的第二个参数是个字符串数组，由此可知可以同时添加多个权限，只需要将权限所对应的字符串添加到数组里面即可。增加如下方法，用于同时添加多个权限：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">private void requestMultiplePermissions() &#123;</div><div class="line">    	    String[] permissions = &#123;Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION,</div><div class="line">                Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.READ_PHONE_STATE,</div><div class="line">                Manifest.permission.GET_ACCOUNTS&#125;;</div><div class="line">        ActivityCompat.requestPermissions(this, permissions, MULTIPLE_PERMISSION_ASK_CODE);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>07/31/2016 17:03 <h4 id="更新：有权限被拒绝时弹窗提醒"><a href="#更新：有权限被拒绝时弹窗提醒" class="headerlink" title="更新：有权限被拒绝时弹窗提醒"></a>更新：有权限被拒绝时弹窗提醒</h4>若我们所需要的权限（必要权限）被拒绝时，必将影响用户体验，因此在回调权限申请的结果函数中设置权限被否决的弹窗提醒，点击 「OK」则再次弹出申请权限对话框，点击取消…我也不好再不要脸的去申请了…</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) &#123;</div><div class="line">        switch (requestCode) &#123;</div><div class="line">            case MULTIPLE_PERMISSION_ASK_CODE: &#123;</div><div class="line">                if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED</div><div class="line">                        || ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">                    //申请失败，可以继续向用户解释</div><div class="line">                    AlertDialog.Builder builder = new AlertDialog.Builder(this);</div><div class="line">                    builder.setTitle(&quot;Help&quot;)</div><div class="line">                            .setMessage(&quot;Need some permission to run this app.&quot;)</div><div class="line">                            .setPositiveButton(&quot;OK&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                                @Override</div><div class="line">                                public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                                    checkPermission();</div><div class="line">                                &#125;</div><div class="line">                            &#125;)</div><div class="line">                            .setNegativeButton(&quot;Cancel&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                                @Override</div><div class="line">                                public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                                &#125;</div><div class="line">                            &#125;)</div><div class="line">                            .show();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>08/01/2016 10:03 <h4 id="更新：-特殊权限申请（实例代码中未附）"><a href="#更新：-特殊权限申请（实例代码中未附）" class="headerlink" title="更新： 特殊权限申请（实例代码中未附）"></a>更新： 特殊权限申请（实例代码中未附）</h4>以上所讲的权限申请属于危险权限范畴（权限分类区别网上太多了，这里就不重复了），接下来讲的是「WRITE_SETTING」,「SYSTEM_ALERT_WINDOW」这两个特殊权限的申请，这里以申请「SYSTEM_ALERT_WINDOW」权限为例：</li>
</ul>
<p>定义一个请求特殊权限的方法，该方法中使用 Intent 打开属于这个应用程序的「SETTING」窗口中的「ACTION_MANAGE_OVERLAY_PERMISSION」来让用户手动获取特殊权限。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">private  void requestAlertWindowPermission() &#123;</div><div class="line">	Intent intent = new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION);</div><div class="line">	intent.setData(Uri.parse(&quot;package:&quot; + getPackageName()));</div><div class="line">	startActivityForResult(intent, REQUEST_CODE);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>再在 onCreate()方法中判断该应用程序所运行的系统的 SDK 版本，若系统的 SDK 版本高于23，则调用上面的特殊权限申请方法。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">if (Build.VERSION.SDK_INT &lt; 23) &#123;</div><div class="line">	// SDK 版本小于23则不需要显式申请</div><div class="line">	&#125; else &#123;</div><div class="line">	// 若canDrawOverlays() 返回假，</div><div class="line">	// 则调用请求显示申请特殊权限的函数</div><div class="line">	if (!Settings.canDrawOverlays(this)) &#123;</div><div class="line">    	requestAlertWindowPermission();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最后，由于请求授予权限的方法是使用 <code>startActivityForResult()</code> 方法来授予权限的，自然会返回一个启动 Activity 的结果，无论是否成功，该结果都会回调 <code>onActivityResult()</code> 方法。复写该方法，并在该方法中使用之前 <code>startActivityForResult()</code> 中传入的  <code>REQUEST_CODE</code> 参数来对相应 Activity 返回的结果做出反应。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">    protected void onActivityResult(int requestCode, int resultCode, Intent data) &#123;</div><div class="line">        super.onActivityResult(requestCode, resultCode, data);</div><div class="line">        if (requestCode == REQUEST_CODE) &#123;</div><div class="line">            if (Settings.canDrawOverlays(this)) &#123;</div><div class="line">                // 权限申请成功，执行下一步操作</div><div class="line">            &#125; else &#123;</div><div class="line">                // 权限申请失败</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>这里为方便大家使用，我写了一个权限申请失败后弹出对话框提醒用户需要同意该权限的「AlertDialog」，若用户同意则再次申请，否则…我也不知如何是好了，笑cry：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">AlertDialog.Builder builder = new AlertDialog.Builder(this);</div><div class="line">            builder.setTitle(&quot;Help&quot;)</div><div class="line">                    .setMessage(&quot;Need some permission to run this app.&quot;)</div><div class="line">                    .setPositiveButton(&quot;OK&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                            requestAlertWindowPermission();</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .setNegativeButton(&quot;Cancel&quot;, new DialogInterface.OnClickListener() &#123;</div><div class="line">                        @Override</div><div class="line">                        public void onClick(DialogInterface dialog, int which) &#123;</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .show();</div></pre></td></tr></table></figure>
<p>同理，申请「WRITE_SETTING」只需将 <code>Intent intent = new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION);</code> 中的参数改为 <code>Settings.ACTION_MANAGE_WRITE_SETTINGS</code>即可，当然，方法名和请求码也应该作出相应改变。</p>
<p>实例代码：<a href="https://github.com/thirtyyuan/Android-exercise/tree/master/Runtime%20Permission" target="_blank" rel="external">LocationTest</a></p>
<p>参考资料：Google android 官方文档：<a href="https://developer.android.com/training/permissions/requesting.html" target="_blank" rel="external">Requesting Permissions at Run Time</a>；郭霖大神的「第一行代码」及<a href="http://chuansong.me/n/355262951150" target="_blank" rel="external">「教你如何在Android 6.0上创建系统悬浮窗」</a>；微凉一季的<a href="http://jijiaxin89.com/2015/08/30/Android-s-Runtime-Permission/" target="_blank" rel="external">「Android M 新的运行时权限开发者需要知道的一切」</a></p>
<p>其他推荐：郭霖的<a href="http://blog.csdn.net/guolin_blog/article/details/51336415" target="_blank" rel="external">「Android提醒微技巧，你真的了解Dialog、Toast和Snackbar吗？」</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么写这篇文章&quot;&gt;&lt;a href=&quot;#为什么写这篇文章&quot; class=&quot;headerlink&quot; title=&quot;为什么写这篇文章&quot;&gt;&lt;/a&gt;为什么写这篇文章&lt;/h2&gt;&lt;p&gt;今天总算是到达了会用 runtime permission 的阶段了，之前我是很惧怕需要用到 runtime permission 的，因为尝试了几次都以失败告终，网上大部分教程都深涩难懂，甚至中文比英文难懂。
    
    </summary>
    
      <category term="android开发" scheme="http://thirtyyuan.github.io/categories/android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="权限管理" scheme="http://thirtyyuan.github.io/tags/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    
      <category term="Runtime Permission" scheme="http://thirtyyuan.github.io/tags/Runtime-Permission/"/>
    
  </entry>
  
  <entry>
    <title>android开发——环境搭建</title>
    <link href="http://thirtyyuan.github.io/2016/07/10/android%E5%BC%80%E5%8F%91%E2%80%94%E2%80%94%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://thirtyyuan.github.io/2016/07/10/android开发——环境搭建/</id>
    <published>2016-07-10T06:30:50.000Z</published>
    <updated>2016-10-29T16:37:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>放张stormzhang亲笔写的话和签名镇楼：<br><img src="https://cloud.githubusercontent.com/assets/16081968/16676550/d3971168-44fd-11e6-87ad-a3a3f640c4b3.png" alt="stormzhang"><br><a id="more"></a></p>
<h2 id="Java开发环境配置"><a href="#Java开发环境配置" class="headerlink" title=" Java开发环境配置 "></a><strong> Java开发环境配置 </strong></h2><p>JDK是java开发包的缩写，是整个Java的核心，包括了Java运行环境、Java工具和Java基础类库（待会使用的java命令就在里面）。</p>
<p>到Oracle官网，选择相应系统版本的JDK(Mac自带JDK版本过低)，并勾选下载jdk框头的<code>Accept License Agreement</code>，<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">JDK下载地址</a>，下载完成后安装。</p>
<h5 id="Mac-OS"><a href="#Mac-OS" class="headerlink" title=" Mac OS "></a><strong> Mac OS </strong></h5><p>查看当前java版本：（系统已经集成JDK，但版本较低，需要重新配置）打开“终端（Terminal）”，输入<code>java -version</code>（有空格），若显示<code>java version 1.8.0_xxx</code>则无需配置，直接看开发部分；<br>安装：点下一步就好；<br>配置环境变量：无需配置，但必须知道JDK安装位置在(/Macintosh HD由于是根目录，一般写~)：<code>~/Library/Java/JavaVirtualMahines</code></p>
<h5 id="Windows"><a href="#Windows" class="headerlink" title=" Windows "></a><strong> Windows </strong></h5><p>请参考下面链接，注意配置“path变量”、“classpath变量”的是系统变量，不是用户变量！以及每一个标点不要乱打多打。不懂就问是在图财害命，不懂就搜索才是程序员。<a href="http://jingyan.baidu.com/article/ab69b270c01a4d2ca7189f8c.html" target="_blank" rel="external">windows java环境变量配置</a></p>
<h2 id="Java开发工具"><a href="#Java开发工具" class="headerlink" title=" Java开发工具 "></a><strong> Java开发工具 </strong></h2><p>稍懂一点的同学可能会问：什么？就可以了？不是听说要用Eclipse(一款强大的IDE（集成开发环境）)开发吗？答：以学习android所需要的java基础，还用不上那么强大的企业级开发工具。现在需要的只有两样东西：命令行＋文本编辑器。这种java开发方式适合小型项目和练习使用，既经济环保，又高效迅捷，最重要的是能帮助初学者了解java项目的编译过程。</p>
<h5 id="Mac-OS-1"><a href="#Mac-OS-1" class="headerlink" title=" Mac OS "></a><strong> Mac OS </strong></h5><p>推荐使用“Sublime Text”，注意创建新文本后(command + N)，首行即为文件名，如创建“Test.java”文件，首行输入<code>Test.java</code>后按下 “command + S” ，文件即被创建。但是在编译前必须将该行删除，否则会被认为是代码的一部分而报错。</p>
<h5 id="Windows-1"><a href="#Windows-1" class="headerlink" title=" Windows "></a><strong> Windows </strong></h5><p>推荐使用“notepad++”，新建后即可开始写出java代码，保存时将文件名后缀改为 “.java” 文件即可。</p>
<p>至于如何编译java文件，就是之后要去自学的事了，推荐mars老师的《java4android》视频教程，看视频时注意多敲多想，不懂的地方可以自己敲代码验证，懂的地方可以敲快一点。</p>
<h2 id="Android开发环境搭建"><a href="#Android开发环境搭建" class="headerlink" title=" Android开发环境搭建 "></a><strong> Android开发环境搭建 </strong></h2><p>Android studio2.0（Win和Mac都有) :<a href="http://pan.baidu.com/s/1b1031s" target="_blank" rel="external">下载地址</a> 密码: c77r<br>    你可能听过可以使用Eclipse的ADT(android development tools)插件进行安卓开发，但那已经过时了，Google已经停止提供对Eclipse的ADT支持，已经无法在最新的android系统下进行开发。现在Google推出的android studio已经成为了android开发的主流IDE，前不久刚升级android studio2.0版本，只是新功能对国内开发者来说…有点尴尬，详情请看<a href="http://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&amp;mid=2650661399&amp;idx=1&amp;sn=877894e93b57e152dc794dae5b382538&amp;scene=23&amp;srcid=0429Yt0RIHcAHyZ7jGhbOq04#rd" target="_blank" rel="external">stormzhang谈 AS 2.0</a><br><img src="https://cloud.githubusercontent.com/assets/16081968/16676818/76aad4f4-4501-11e6-88b5-9e72e7df5fd1.png" alt="AS 2.0"></p>
<ol>
<li><p><strong> 新建项目 </strong></p>
<p> 还是请看stormzhang博客，但是在下载SDK那步，能不下就不下，因为是要到Google的服务器下载，你懂的，不过不用担心，前几天帮同学装时似乎是不需要翻墙了，就算需要我也有办法帮你解决。新建项目过程请看：<a href="http://stormzhang.com/devtools/2014/11/25/android-studio-tutorial1/" target="_blank" rel="external">AS 系列教程</a></p>
</li>
<li><p><strong> 使用镜像服务器 </strong></p>
<p> SDK等默认从Google服务器下载，慢和翻墙是必须的，使用镜像服务器就可以解决这种问题。使用方法和地址: <a href="http://tools.android-studio.org/index.php/85-tools/110-androidsdk-mirrors" target="_blank" rel="external">Android SDK 在线更新镜像</a>。注意: <code>Http proxy</code> 找不到在哪，可以打开<code>preference</code>，搜索框输入<code>proxy</code> ，如下图左上角：<br> <img src="https://cloud.githubusercontent.com/assets/16081968/16676974/f2de6422-4502-11e6-8c2d-25c3a040b058.png" alt="http porxy">,之后就开始学习开发app吧！</p>
</li>
</ol>
<p>最后，既然选择了开始，那就坚持每天学习、进步一点点，下个CSDN、逛逛gank.io(有妹子图福利)，fork个Github，关注几个大牛开发者，加个优质群看看别人讨论的问题，学习material design设计规范，学习用面向对象思想思考身边的问题，这些教你的绝对比我能教你的多，为了我们所热爱的一切，怀挺！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;放张stormzhang亲笔写的话和签名镇楼：&lt;br&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/16081968/16676550/d3971168-44fd-11e6-87ad-a3a3f640c4b3.png&quot; alt=&quot;stormzhang&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="android开发" scheme="http://thirtyyuan.github.io/categories/android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="环境搭建" scheme="http://thirtyyuan.github.io/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="JDK" scheme="http://thirtyyuan.github.io/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>你好，世界。</title>
    <link href="http://thirtyyuan.github.io/2016/07/06/hello-world/"/>
    <id>http://thirtyyuan.github.io/2016/07/06/hello-world/</id>
    <published>2016-07-06T07:20:08.000Z</published>
    <updated>2016-07-07T15:55:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>虽然很不想用这个万人用过的标题作为标题，但似乎没有一个问候语能比它跟简洁有力。</p>
<p>这次我把博客挪了个窝，学习做一些简单的前端是一个目的，更重要的是，我可以随意更改我文章所依托的平台的样式及内容了。我之前尝试过 Github Issue 作博客，相当的简洁方便，酷爱至极。但慢慢的，它的一些不足暴露了出来。可能观众都不在意，但是你确实没办法 DIY 一个你喜欢的阅读界面给他们，每次打开，我必须得忍受那些我不喜欢的界面。</p>
<p>由于理念差异太大，既喜欢带着简洁美感去阅读，又喜欢看到别人的评论并与之交流，所以有了现在你所看到的我的博客。当然，之后我会教各位如何搭建基于 Github Pages 的个人博客，网上也有很全的教程，我主要把我踩的坑的解决方法分享出来。</p>
<p>明天是你喜欢的日子，但是为了之后的惊喜，暂时不告诉你了:P</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;虽然很不想用这个万人用过的标题作为标题，但似乎没有一个问候语能比它跟简洁有力。&lt;/p&gt;
&lt;p&gt;这次我把博客挪了个窝，学习做一些简单的前端是一个目的，更重要的是，我可以随意更改我文章所依托的平台的样式及内容了。我之前尝试过 Github Issue 作博客，相当的简洁方便，酷
    
    </summary>
    
      <category term="杂谈" scheme="http://thirtyyuan.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="初见" scheme="http://thirtyyuan.github.io/tags/%E5%88%9D%E8%A7%81/"/>
    
  </entry>
  
</feed>
