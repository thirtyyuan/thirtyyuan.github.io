<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>thirtyyuan&#39;s Den</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://thirtyyuan.github.io/"/>
  <updated>2016-10-30T10:44:53.000Z</updated>
  <id>http://thirtyyuan.github.io/</id>
  
  <author>
    <name>thirtyyuan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nice to meet you</title>
    <link href="http://thirtyyuan.github.io/2016/10/30/Nice_to_meet_you/"/>
    <id>http://thirtyyuan.github.io/2016/10/30/Nice_to_meet_you/</id>
    <published>2016-10-29T16:29:00.000Z</published>
    <updated>2016-10-30T10:44:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>由于之前博客的主题对代码块的支持不好，而对代码块支持较好的几个主题的一些功能又不满意，因此一直没换，直到看医生的「android 群英传：神兵利器」时才想到去 <a href="https://hexo.io/zh-cn" target="_blank" rel="external">Hexo 官网</a>「Hexo」看下主题，结果就物色到了这款让我超喜欢的主题。刚开始只是因为黑色背景的炫酷和对代码块的支持很好而用它，结果发现它可没那么简单！<br><a id="more"></a></p>
<h3 id="惊艳一"><a href="#惊艳一" class="headerlink" title="惊艳一"></a>惊艳一</h3><p>主题的黑色背景与标签、阅读原文、社交链接的颜色高度协调，简直就是平时写代码时的 IDE 和各种强大的文本编辑器的变种，看上去就很有范有没有！再看细节，每篇文章的简介部分都是浮起来的，文章分割得既清晰又使得每个块在进入页面时的动画有序的串联起来，虽然别的主题也有类似的设计，但是配上酷炫的背景和标签，很 material design 吧！不信你在首页下拉到下面看看动画 :P<br><img src="http://ww4.sinaimg.cn/large/006y8mN6jw1f9ae1b0u1ej31kw0zk0zt.jpg" alt="backgroundOfBlog"></p>
<h3 id="惊艳二"><a href="#惊艳二" class="headerlink" title="惊艳二"></a>惊艳二</h3><p>神奇的菜单键！之前一直觉得「标签」、「友情链接」、「关于我」这些小东西没必要单独放一个页面来展示，但是又不会前端，只能接受那种设计（或者全部放一页里面？有点乱吧）。直到遇到这个主题，解决了我长久以来的痛点。<br><img src="http://ww1.sinaimg.cn/large/006y8mN6jw1f9aertfr5xj30fi0a6dgf.jpg" alt="menu"></p>
<h3 id="惊艳三"><a href="#惊艳三" class="headerlink" title="惊艳三"></a>惊艳三</h3><p>每篇文章都点页面右下角的「去到底部」按钮看看有什么？<br><img src="http://ww3.sinaimg.cn/large/006y8mN6jw1f9af8v2ecuj318s09yjtc.jpg" alt="rights"><br>厉害了 word哥！在这个文章版权被忽略，一篇文章可以搜出十个作者的年代，简直让写文章的人们看到了福音！虽然文章内容还是随意复制，但最起码给看到的人们提醒了版权的小事，这就是我最感谢主题作者「luuman」的地方。</p>
<h3 id="惊艳四"><a href="#惊艳四" class="headerlink" title="惊艳四"></a>惊艳四</h3><p><img src="http://ww2.sinaimg.cn/large/006y8mN6jw1f9afgqcbijj30lo03wwei.jpg" alt="shareMenu"><br>定睛一看，这是什么？广告吗？我要点进去看看博主都收了什么好处，然后举报！<br><img src="http://ww2.sinaimg.cn/large/006y8mN6jw1f9ah207naaj30o40ruac8.jpg" alt="share"><br>不对啊，居然这么贴心的准备了分享博客的功能！以后我写的好你们想分享就方便多了是吧😁之前一直想接入分享功能，但是难度太大最终放弃了，再次感谢主题作者「luuman」解决了业余人员的痛点🙏</p>
<h3 id="惊艳五"><a href="#惊艳五" class="headerlink" title="惊艳五"></a>惊艳五</h3><p>我一直觉得读者想看一篇文章，就要充分展现出文章本身，包括正文和目录，其他的一切都是次要的，不应该直接展示出来影响阅读体验；但有时读者又想很快的跳转到自己感兴趣的内容，所以还是要留出快速跳转到相应内容的机会。所以，应该由读者自己决定是否显示标签、文章列表等信息，于是看文章的左下角：<br><img src="http://ww1.sinaimg.cn/large/006y8mN6jw1f9afx8y5nej30z611sq5b.jpg" alt="ArtiscleList"><br>嗯，简直太贴心了。当然还有引导页、进度条等插件的配置也是超级方便，主要是主题作者的博客里有详细的指导。</p>
<p>以此纪念我的博客重获新生，并向主题作者<a href="http://luuman.github.io" target="_blank" rel="external">luuman</a>表示感谢！</p>
<h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><ol>
<li>最近有时间时不学习，没时间时更没法学，导致许久没出博文，而且算法类的博文不大好写，还是潜心学习吧。</li>
<li>终于刷机成功了，用上了 CyanogenMod OS 的系统，既有原生安卓的 feel 又没了 Google 服务的耗电，不过失去了 Google 服务的安卓用起来还真不顺手，需要的可以刷一个，另外觉得自己手机卡顿的，这里提供几个不同系统的 ROM，觉得不好用了再刷其他的也不迟。（刷机有风险，刷之前记得备份！！！推荐「QQ同步助手」）</li>
</ol>
<table>
<thead>
<tr>
<th>系统名</th>
<th>官网地址</th>
</tr>
</thead>
<tbody>
<tr>
<td>CyanogenMod</td>
<td><a href="http://download.cyanogenmod.org/?device=&amp;type=experimental" target="_blank" rel="external">CynogenModOS Download</a></td>
</tr>
<tr>
<td>YunOS</td>
<td><a href="http://www.yunos.com/rom?spm=a2c01.7617293.header.12.rguwKO" target="_blank" rel="external">YunOS Download</a></td>
</tr>
<tr>
<td>Flyme</td>
<td><a href="http://www.flyme.cn/firmwarelist-53.html#8" target="_blank" rel="external">Flyme Download</a></td>
</tr>
<tr>
<td>MIUI</td>
<td><a href="http://www.miui.com/download.html" target="_blank" rel="external">MIUI Download</a></td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于之前博客的主题对代码块的支持不好，而对代码块支持较好的几个主题的一些功能又不满意，因此一直没换，直到看医生的「android 群英传：神兵利器」时才想到去 &lt;a href=&quot;https://hexo.io/zh-cn&quot;&gt;Hexo 官网&lt;/a&gt;「Hexo」看下主题，结果就物色到了这款让我超喜欢的主题。刚开始只是因为黑色背景的炫酷和对代码块的支持很好而用它，结果发现它可没那么简单！&lt;br&gt;
    
    </summary>
    
      <category term="博客" scheme="http://thirtyyuan.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="http://thirtyyuan.github.io/tags/hexo/"/>
    
      <category term="设计" scheme="http://thirtyyuan.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="刷机" scheme="http://thirtyyuan.github.io/tags/%E5%88%B7%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Android 6.0 Permission</title>
    <link href="http://thirtyyuan.github.io/2016/07/29/Android-6-0-Permission/"/>
    <id>http://thirtyyuan.github.io/2016/07/29/Android-6-0-Permission/</id>
    <published>2016-07-29T11:50:50.000Z</published>
    <updated>2016-10-30T09:02:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么写这篇文章"><a href="#为什么写这篇文章" class="headerlink" title="为什么写这篇文章"></a>为什么写这篇文章</h2><p>今天总算是到达了会用 runtime permission 的阶段了，之前我是很惧怕需要用到 runtime permission 的，因为尝试了几次都以失败告终，网上大部分教程都深涩难懂，甚至中文比英文难懂。<a id="more"></a>但是因为权限问题而不能真机调试，真的很痛苦，今天正好解决了这个小问题，于是打算从新手（我）的角度写篇文章总结下，帮助大家尽快学会 runtime permission 的使用。</p>
<h2 id="什么是-runtime-permission"><a href="#什么是-runtime-permission" class="headerlink" title="什么是 runtime permission"></a>什么是 runtime permission</h2><p>官方文档解释：「从 android 6.0 开始，用户授予应用的权限不是在安装应用时授予，而是在应用运行时，需要用到该权限时授予」，如下图:<br><img src="http://ww1.sinaimg.cn/large/006tNbRwgw1f6at9zc0otj30qo0fkabo.jpg" alt="android 权限授予差别"><br>简单的说，应用所需要的权限授予不再是流氓的让用户在安装应用时全盘接受，否则无法安装该应用，而是在用户使用该应用的某项功能时，明显的弹窗询问用户是否允许应用获取该功能所需要的权限。总之，它是为了让 android 6.0 以上的系统更安全而生的。</p>
<h2 id="为什么要会用-runtime-permission"><a href="#为什么要会用-runtime-permission" class="headerlink" title="为什么要会用 runtime permission"></a>为什么要会用 runtime permission</h2><ol>
<li>作为开发者，应该尽可能为用户着想，给用户最安全、最舒适的体验，因此我们应该避免流氓的让用户在安装应用时必须同意，否则不给用户使用应用；</li>
<li>不使用 runtime permission 的应用有极大可能在使用需要权限的功能时引起应用奔溃。具体原因（见文末第二个参考链接）不再分析，总之请尽快学习使用 runtime permission ，为你的职业操守和情怀加分，不将就！</li>
</ol>
<h2 id="实现思路分析"><a href="#实现思路分析" class="headerlink" title="实现思路分析"></a>实现思路分析</h2><p>这里以获取定位权限后进行定位操作为例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> MainActivity extands Activity &#123;</div><div class="line"></div><div class="line">	<span class="comment">//自定义权限请求码，以便于后面对请求码对应的权限作出反应</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LOCATION_REQUEST_CODE = <span class="number">7</span> ;</div><div class="line">	</div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">		<span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">		setContentView(R.layout.activity_main)</div><div class="line">		</div><div class="line">		<span class="keyword">if</span> (SDKVersion &lt; <span class="number">23</span>) &#123;</div><div class="line">			<span class="comment">//直接进行权限已经被授予后的操作，如；</span></div><div class="line">			locationProvider();</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="comment">//检查权限是否已经授予</span></div><div class="line">			<span class="keyword">if</span> (granted) &#123;</div><div class="line">				<span class="comment">//进行权限已被授予后的操作，如；</span></div><div class="line">				locationProvider();</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				<span class="comment">//请求授予权限</span></div><div class="line">				requestPermission(...);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>无论权限被同意还是拒绝，系统都会回调这个方法,有必要的话可以用它来通知用户权限授予的结果：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> MainActivity extands Activity &#123;</div><div class="line"></div><div class="line">	<span class="comment">//上面代码相同，省略</span></div><div class="line">	...</div><div class="line">	</div><div class="line">	<span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, String[] permissions, <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</div><div class="line">    	<span class="keyword">switch</span> (requestCode) &#123;</div><div class="line">			<span class="keyword">case</span> LOCATION_REQUEST_CODE:</div><div class="line">    	    	<span class="comment">//如果权限请求被拒绝，则 grantResults 通常为空</span></div><div class="line">    	        <span class="keyword">if</span> (grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">   	             	<span class="comment">// 进行权限已被授予后的操作，如：</span></div><div class="line">   	            	 locationProvider();</div><div class="line">   	         	&#125; <span class="keyword">else</span> &#123;</div><div class="line">  	            	<span class="comment">// 权限未被授予时的操作，如：</span></div><div class="line">   	            	Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"OH...Permission has been Denied."</span>, Toast.LENGTH_SHORT).show();</div><div class="line">          		&#125;</div><div class="line">   		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在 activity 销毁时对已获取的权限操作进行销毁，如此处我们调用的 locationManager：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span>  <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">super</span>.onDestroy();</div><div class="line">	<span class="keyword">if</span> (locationManager != <span class="keyword">null</span>) &#123;</div><div class="line">		locationManager.removeUpdates(locationListener);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最后，别忘记在 AndroidManifest.xml 中注册权限：<br><code>&lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot;/&gt;</code><br>觉得有用的话，欢迎关注、评论及 Github 上的follow、star :P</p>
<hr>
<ul>
<li>07/31/2016 16:55 <h4 id="更新：新增多权限请求同时申请："><a href="#更新：新增多权限请求同时申请：" class="headerlink" title="更新：新增多权限请求同时申请："></a>更新：新增多权限请求同时申请：</h4>先在manifest中注册以下权限，再将checkPermission()改为如下内容</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkPermission</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//判断当前Activity是否已经获得了以下权限</span></div><div class="line">	<span class="keyword">if</span> (ContextCompat.checkSelfPermission(<span class="keyword">this</span>, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED</div><div class="line">    		|| ContextCompat.checkSelfPermission(<span class="keyword">this</span>, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">            requestMultiplePermissions();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            locationProvider();</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>注意观察 requestPermission() 的第二个参数是个字符串数组，由此可知可以同时添加多个权限，只需要将权限所对应的字符串添加到数组里面即可。增加如下方法，用于同时添加多个权限：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">requestMultiplePermissions</span><span class="params">()</span> </span>&#123;</div><div class="line">    	    String[] permissions = &#123;Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION,</div><div class="line">                Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.READ_PHONE_STATE,</div><div class="line">                Manifest.permission.GET_ACCOUNTS&#125;;</div><div class="line">        ActivityCompat.requestPermissions(<span class="keyword">this</span>, permissions, MULTIPLE_PERMISSION_ASK_CODE);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>07/31/2016 17:03 <h4 id="更新：有权限被拒绝时弹窗提醒"><a href="#更新：有权限被拒绝时弹窗提醒" class="headerlink" title="更新：有权限被拒绝时弹窗提醒"></a>更新：有权限被拒绝时弹窗提醒</h4>若我们所需要的权限（必要权限）被拒绝时，必将影响用户体验，因此在回调权限申请的结果函数中设置权限被否决的弹窗提醒，点击 「OK」则再次弹出申请权限对话框，点击取消…我也不好再不要脸的去申请了…</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, String permissions[], <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (requestCode) &#123;</div><div class="line">            <span class="keyword">case</span> MULTIPLE_PERMISSION_ASK_CODE: &#123;</div><div class="line">                <span class="keyword">if</span> (ContextCompat.checkSelfPermission(<span class="keyword">this</span>, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED</div><div class="line">                        || ContextCompat.checkSelfPermission(<span class="keyword">this</span>, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">                    <span class="comment">//申请失败，可以继续向用户解释</span></div><div class="line">                    AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</div><div class="line">                    builder.setTitle(<span class="string">"Help"</span>)</div><div class="line">                            .setMessage(<span class="string">"Need some permission to run this app."</span>)</div><div class="line">                            .setPositiveButton(<span class="string">"OK"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">                                <span class="meta">@Override</span></div><div class="line">                                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line">                                    checkPermission();</div><div class="line">                                &#125;</div><div class="line">                            &#125;)</div><div class="line">                            .setNegativeButton(<span class="string">"Cancel"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">                                <span class="meta">@Override</span></div><div class="line">                                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line">                                &#125;</div><div class="line">                            &#125;)</div><div class="line">                            .show();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>08/01/2016 10:03 <h4 id="更新：-特殊权限申请（实例代码中未附）"><a href="#更新：-特殊权限申请（实例代码中未附）" class="headerlink" title="更新： 特殊权限申请（实例代码中未附）"></a>更新： 特殊权限申请（实例代码中未附）</h4>以上所讲的权限申请属于危险权限范畴（权限分类区别网上太多了，这里就不重复了），接下来讲的是「WRITE_SETTING」,「SYSTEM_ALERT_WINDOW」这两个特殊权限的申请，这里以申请「SYSTEM_ALERT_WINDOW」权限为例：</li>
</ul>
<p>定义一个请求特殊权限的方法，该方法中使用 Intent 打开属于这个应用程序的「SETTING」窗口中的「ACTION_MANAGE_OVERLAY_PERMISSION」来让用户手动获取特殊权限。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span>  <span class="keyword">void</span> <span class="title">requestAlertWindowPermission</span><span class="params">()</span> </span>&#123;</div><div class="line">	Intent intent = <span class="keyword">new</span> Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION);</div><div class="line">	intent.setData(Uri.parse(<span class="string">"package:"</span> + getPackageName()));</div><div class="line">	startActivityForResult(intent, REQUEST_CODE);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>再在 onCreate()方法中判断该应用程序所运行的系统的 SDK 版本，若系统的 SDK 版本高于23，则调用上面的特殊权限申请方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &lt; <span class="number">23</span>) &#123;</div><div class="line">	<span class="comment">// SDK 版本小于23则不需要显式申请</span></div><div class="line">	&#125; <span class="keyword">else</span> &#123;</div><div class="line">	<span class="comment">// 若canDrawOverlays() 返回假，</span></div><div class="line">	<span class="comment">// 则调用请求显示申请特殊权限的函数</span></div><div class="line">	<span class="keyword">if</span> (!Settings.canDrawOverlays(<span class="keyword">this</span>)) &#123;</div><div class="line">    	requestAlertWindowPermission();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最后，由于请求授予权限的方法是使用 <code>startActivityForResult()</code> 方法来授予权限的，自然会返回一个启动 Activity 的结果，无论是否成功，该结果都会回调 <code>onActivityResult()</code> 方法。复写该方法，并在该方法中使用之前 <code>startActivityForResult()</code> 中传入的  <code>REQUEST_CODE</code> 参数来对相应 Activity 返回的结果做出反应。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</div><div class="line">        <span class="keyword">if</span> (requestCode == REQUEST_CODE) &#123;</div><div class="line">            <span class="keyword">if</span> (Settings.canDrawOverlays(<span class="keyword">this</span>)) &#123;</div><div class="line">                <span class="comment">// 权限申请成功，执行下一步操作</span></div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">// 权限申请失败</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>这里为方便大家使用，我写了一个权限申请失败后弹出对话框提醒用户需要同意该权限的「AlertDialog」，若用户同意则再次申请，否则…我也不知如何是好了，笑cry：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</div><div class="line">            builder.setTitle(<span class="string">"Help"</span>)</div><div class="line">                    .setMessage(<span class="string">"Need some permission to run this app."</span>)</div><div class="line">                    .setPositiveButton(<span class="string">"OK"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line">                            requestAlertWindowPermission();</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .setNegativeButton(<span class="string">"Cancel"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                    .show();</div></pre></td></tr></table></figure>
<p>同理，申请「WRITE_SETTING」只需将 <code>Intent intent = new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION);</code> 中的参数改为 <code>Settings.ACTION_MANAGE_WRITE_SETTINGS</code>即可，当然，方法名和请求码也应该作出相应改变。</p>
<p>实例代码：<a href="https://github.com/thirtyyuan/Android-exercise/tree/master/Runtime%20Permission" target="_blank" rel="external">LocationTest</a></p>
<p>参考资料：Google android 官方文档：<a href="https://developer.android.com/training/permissions/requesting.html" target="_blank" rel="external">Requesting Permissions at Run Time</a>；郭霖大神的「第一行代码」及<a href="http://chuansong.me/n/355262951150" target="_blank" rel="external">「教你如何在Android 6.0上创建系统悬浮窗」</a>；微凉一季的<a href="http://jijiaxin89.com/2015/08/30/Android-s-Runtime-Permission/" target="_blank" rel="external">「Android M 新的运行时权限开发者需要知道的一切」</a></p>
<p>其他推荐：郭霖的<a href="http://blog.csdn.net/guolin_blog/article/details/51336415" target="_blank" rel="external">「Android提醒微技巧，你真的了解Dialog、Toast和Snackbar吗？」</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么写这篇文章&quot;&gt;&lt;a href=&quot;#为什么写这篇文章&quot; class=&quot;headerlink&quot; title=&quot;为什么写这篇文章&quot;&gt;&lt;/a&gt;为什么写这篇文章&lt;/h2&gt;&lt;p&gt;今天总算是到达了会用 runtime permission 的阶段了，之前我是很惧怕需要用到 runtime permission 的，因为尝试了几次都以失败告终，网上大部分教程都深涩难懂，甚至中文比英文难懂。
    
    </summary>
    
      <category term="android开发" scheme="http://thirtyyuan.github.io/categories/android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="权限管理" scheme="http://thirtyyuan.github.io/tags/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    
      <category term="Runtime Permission" scheme="http://thirtyyuan.github.io/tags/Runtime-Permission/"/>
    
  </entry>
  
  <entry>
    <title>android开发——环境搭建</title>
    <link href="http://thirtyyuan.github.io/2016/07/10/android%E5%BC%80%E5%8F%91%E2%80%94%E2%80%94%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://thirtyyuan.github.io/2016/07/10/android开发——环境搭建/</id>
    <published>2016-07-10T06:30:50.000Z</published>
    <updated>2016-10-29T16:37:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>放张stormzhang亲笔写的话和签名镇楼：<br><img src="https://cloud.githubusercontent.com/assets/16081968/16676550/d3971168-44fd-11e6-87ad-a3a3f640c4b3.png" alt="stormzhang"><br><a id="more"></a></p>
<h2 id="Java开发环境配置"><a href="#Java开发环境配置" class="headerlink" title=" Java开发环境配置 "></a><strong> Java开发环境配置 </strong></h2><p>JDK是java开发包的缩写，是整个Java的核心，包括了Java运行环境、Java工具和Java基础类库（待会使用的java命令就在里面）。</p>
<p>到Oracle官网，选择相应系统版本的JDK(Mac自带JDK版本过低)，并勾选下载jdk框头的<code>Accept License Agreement</code>，<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">JDK下载地址</a>，下载完成后安装。</p>
<h5 id="Mac-OS"><a href="#Mac-OS" class="headerlink" title=" Mac OS "></a><strong> Mac OS </strong></h5><p>查看当前java版本：（系统已经集成JDK，但版本较低，需要重新配置）打开“终端（Terminal）”，输入<code>java -version</code>（有空格），若显示<code>java version 1.8.0_xxx</code>则无需配置，直接看开发部分；<br>安装：点下一步就好；<br>配置环境变量：无需配置，但必须知道JDK安装位置在(/Macintosh HD由于是根目录，一般写~)：<code>~/Library/Java/JavaVirtualMahines</code></p>
<h5 id="Windows"><a href="#Windows" class="headerlink" title=" Windows "></a><strong> Windows </strong></h5><p>请参考下面链接，注意配置“path变量”、“classpath变量”的是系统变量，不是用户变量！以及每一个标点不要乱打多打。不懂就问是在图财害命，不懂就搜索才是程序员。<a href="http://jingyan.baidu.com/article/ab69b270c01a4d2ca7189f8c.html" target="_blank" rel="external">windows java环境变量配置</a></p>
<h2 id="Java开发工具"><a href="#Java开发工具" class="headerlink" title=" Java开发工具 "></a><strong> Java开发工具 </strong></h2><p>稍懂一点的同学可能会问：什么？就可以了？不是听说要用Eclipse(一款强大的IDE（集成开发环境）)开发吗？答：以学习android所需要的java基础，还用不上那么强大的企业级开发工具。现在需要的只有两样东西：命令行＋文本编辑器。这种java开发方式适合小型项目和练习使用，既经济环保，又高效迅捷，最重要的是能帮助初学者了解java项目的编译过程。</p>
<h5 id="Mac-OS-1"><a href="#Mac-OS-1" class="headerlink" title=" Mac OS "></a><strong> Mac OS </strong></h5><p>推荐使用“Sublime Text”，注意创建新文本后(command + N)，首行即为文件名，如创建“Test.java”文件，首行输入<code>Test.java</code>后按下 “command + S” ，文件即被创建。但是在编译前必须将该行删除，否则会被认为是代码的一部分而报错。</p>
<h5 id="Windows-1"><a href="#Windows-1" class="headerlink" title=" Windows "></a><strong> Windows </strong></h5><p>推荐使用“notepad++”，新建后即可开始写出java代码，保存时将文件名后缀改为 “.java” 文件即可。</p>
<p>至于如何编译java文件，就是之后要去自学的事了，推荐mars老师的《java4android》视频教程，看视频时注意多敲多想，不懂的地方可以自己敲代码验证，懂的地方可以敲快一点。</p>
<h2 id="Android开发环境搭建"><a href="#Android开发环境搭建" class="headerlink" title=" Android开发环境搭建 "></a><strong> Android开发环境搭建 </strong></h2><p>Android studio2.0（Win和Mac都有) :<a href="http://pan.baidu.com/s/1b1031s" target="_blank" rel="external">下载地址</a> 密码: c77r<br>    你可能听过可以使用Eclipse的ADT(android development tools)插件进行安卓开发，但那已经过时了，Google已经停止提供对Eclipse的ADT支持，已经无法在最新的android系统下进行开发。现在Google推出的android studio已经成为了android开发的主流IDE，前不久刚升级android studio2.0版本，只是新功能对国内开发者来说…有点尴尬，详情请看<a href="http://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&amp;mid=2650661399&amp;idx=1&amp;sn=877894e93b57e152dc794dae5b382538&amp;scene=23&amp;srcid=0429Yt0RIHcAHyZ7jGhbOq04#rd" target="_blank" rel="external">stormzhang谈 AS 2.0</a><br><img src="https://cloud.githubusercontent.com/assets/16081968/16676818/76aad4f4-4501-11e6-88b5-9e72e7df5fd1.png" alt="AS 2.0"></p>
<ol>
<li><p><strong> 新建项目 </strong></p>
<p> 还是请看stormzhang博客，但是在下载SDK那步，能不下就不下，因为是要到Google的服务器下载，你懂的，不过不用担心，前几天帮同学装时似乎是不需要翻墙了，就算需要我也有办法帮你解决。新建项目过程请看：<a href="http://stormzhang.com/devtools/2014/11/25/android-studio-tutorial1/" target="_blank" rel="external">AS 系列教程</a></p>
</li>
<li><p><strong> 使用镜像服务器 </strong></p>
<p> SDK等默认从Google服务器下载，慢和翻墙是必须的，使用镜像服务器就可以解决这种问题。使用方法和地址: <a href="http://tools.android-studio.org/index.php/85-tools/110-androidsdk-mirrors" target="_blank" rel="external">Android SDK 在线更新镜像</a>。注意: <code>Http proxy</code> 找不到在哪，可以打开<code>preference</code>，搜索框输入<code>proxy</code> ，如下图左上角：<br> <img src="https://cloud.githubusercontent.com/assets/16081968/16676974/f2de6422-4502-11e6-8c2d-25c3a040b058.png" alt="http porxy">,之后就开始学习开发app吧！</p>
</li>
</ol>
<p>最后，既然选择了开始，那就坚持每天学习、进步一点点，下个CSDN、逛逛gank.io(有妹子图福利)，fork个Github，关注几个大牛开发者，加个优质群看看别人讨论的问题，学习material design设计规范，学习用面向对象思想思考身边的问题，这些教你的绝对比我能教你的多，为了我们所热爱的一切，怀挺！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;放张stormzhang亲笔写的话和签名镇楼：&lt;br&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/16081968/16676550/d3971168-44fd-11e6-87ad-a3a3f640c4b3.png&quot; alt=&quot;stormzhang&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="android开发" scheme="http://thirtyyuan.github.io/categories/android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="环境搭建" scheme="http://thirtyyuan.github.io/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="JDK" scheme="http://thirtyyuan.github.io/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>你好，世界。</title>
    <link href="http://thirtyyuan.github.io/2016/07/06/hello-world/"/>
    <id>http://thirtyyuan.github.io/2016/07/06/hello-world/</id>
    <published>2016-07-06T07:20:08.000Z</published>
    <updated>2016-07-07T15:55:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>虽然很不想用这个万人用过的标题作为标题，但似乎没有一个问候语能比它跟简洁有力。</p>
<p>这次我把博客挪了个窝，学习做一些简单的前端是一个目的，更重要的是，我可以随意更改我文章所依托的平台的样式及内容了。我之前尝试过 Github Issue 作博客，相当的简洁方便，酷爱至极。但慢慢的，它的一些不足暴露了出来。可能观众都不在意，但是你确实没办法 DIY 一个你喜欢的阅读界面给他们，每次打开，我必须得忍受那些我不喜欢的界面。</p>
<p>由于理念差异太大，既喜欢带着简洁美感去阅读，又喜欢看到别人的评论并与之交流，所以有了现在你所看到的我的博客。当然，之后我会教各位如何搭建基于 Github Pages 的个人博客，网上也有很全的教程，我主要把我踩的坑的解决方法分享出来。</p>
<p>明天是你喜欢的日子，但是为了之后的惊喜，暂时不告诉你了:P</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;虽然很不想用这个万人用过的标题作为标题，但似乎没有一个问候语能比它跟简洁有力。&lt;/p&gt;
&lt;p&gt;这次我把博客挪了个窝，学习做一些简单的前端是一个目的，更重要的是，我可以随意更改我文章所依托的平台的样式及内容了。我之前尝试过 Github Issue 作博客，相当的简洁方便，酷
    
    </summary>
    
      <category term="杂谈" scheme="http://thirtyyuan.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="初见" scheme="http://thirtyyuan.github.io/tags/%E5%88%9D%E8%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>给 Arduino 插上互联网的翅膀</title>
    <link href="http://thirtyyuan.github.io/2016/06/04/%E7%BB%99-Arduino-%E6%8F%92%E4%B8%8A%E4%BA%92%E8%81%94%E7%BD%91%E7%9A%84%E7%BF%85%E8%86%80/"/>
    <id>http://thirtyyuan.github.io/2016/06/04/给-Arduino-插上互联网的翅膀/</id>
    <published>2016-06-04T09:20:40.000Z</published>
    <updated>2017-01-04T09:49:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="挑选联网模块"><a href="#挑选联网模块" class="headerlink" title="挑选联网模块"></a>挑选联网模块</h2><p>Arduino联网根据联网是否需要在wifi附近分为两种不同形式：wifi模块（附近需要wifi源），GPRS模块（通过手机卡的GPRS信号联网）。具体需要用何种模块，需要看你产品的使用环境，如果是在家、厂里或附近（一般不超过20米，否则效果不好），则可以使用wifi模块，这样就不需要多买一张SIM卡。产品若要工作在室外，则不得不使用GPRS模块了。<a id="more"></a><br>推荐产品：<br>    wifi模块：ESP8266、W5100；<br>    GPRS模块：SIM900；（单买各模块的邮费较贵，建议几人合资购买或攒一些模块一起购买，店家不作推荐）<br>    最后，别忘记最重要的一点！购买USB转TTL模块（或者买直接封装成产品，有类似U盘外壳的那种）</p>
<h2 id="接线"><a href="#接线" class="headerlink" title="接线"></a>接线</h2><p>到货后，第一件事便是测试啦！是不是有点小激动？Mac的童鞋注意啦，平时让你 OS X 用得嗨，现在可就没那么便宜你了，先装个 Windows7 或 10 再说（请使用 VMware，最好装win10，因为win7有的是精简版，驱动各种装不了，连正版 Arduino 驱动都没发装），因为要用的软件在 Mac 没有或没有那么方便。废话少说，先接线（网上接线教程较乱，简直神坑，让我接了这个又接那个，到底接哪个才是对的！？此文就是来改变这种局面的）：<br>ESP8266引脚图：<br><img src="https://ww3.sinaimg.cn/large/006y8lVajw1fbeq1dglvdj30n8122go9.jpg" alt="ESP8266引脚图"></p>
<p>首先跟USB转TTL模块连接：</p>
<table>
<thead>
<tr>
<th>ESP8266</th>
<th>USB-TTL</th>
</tr>
</thead>
<tbody>
<tr>
<td>Gnd</td>
<td>Gnd</td>
</tr>
<tr>
<td>Vcc</td>
<td>3V3</td>
</tr>
<tr>
<td>CH_PD</td>
<td>3V3</td>
</tr>
<tr>
<td>TX</td>
<td>RX</td>
</tr>
<tr>
<td>RX</td>
<td>TX</td>
</tr>
</tbody>
</table>
<p>Vcc千万记得接3v3！接5v的可以自己试试，据说接一晚上不会有事，但千万别作死。TX接USB转TTL的RX，RX接USB转TTL的TX，永远记得任何模块的TX／RX接另一模块的RX/TX。</p>
<p>SIM900接线图：<br><img src="https://ww4.sinaimg.cn/large/006y8lVajw1fbeq7szng7j30za0qaq6p.jpg" alt="SIM900接线图"><br>首先请将SIM接入SIM900卡槽！红黑两线分别为Vcc和Gnd你懂的，Vcc接5V即可，TX/RX对应的口在图中白色方块上有写，接USB-TTL的方法与ESP8266相同。</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>模块接到 USB-TTL 后，UBS-TTL 的 USB 一端接到电脑 USB 口，此时开始有的电脑USB驱动会安装失败（特别是 Win7 系统），这时，开始菜单，搜索 “设备管理器” ，打开 “端口（ COM 和 LPT ）”，找到带黄色感叹号的那个 COM 口双击后选择 “自动获取xxx”，过一段时间后就安装好驱动了，实在不行就搜一下驱动安装吧，反正官网下的win10就是这么简单就行了。<br>USB-TTL 驱动安装完成后，自行下载安装 “sscom串口调试助手”（其它串口调试助手也可以）。打开后一般会自动识别COM口，记得无论ESP8266还是SIM900，都将串口调试助手波特率为115200（不懂什么是波特率的在捣鼓完后请搜索解决），勾选☑️发送新行，在“字符串输入框”输入“AT”，点击发送，对话框返回“OK”则说明接线正常，ESP8266 或 SIM900 模块已经启动了（乱码是因为模块上电后还没实现串口同步工作，再发一次 “AT” 即可）。<br><img src="https://ww4.sinaimg.cn/large/006y8lVajw1fbeqarkn3vj30z80rc41x.jpg" alt="AT指令测试图"></p>
<h2 id="串口调试"><a href="#串口调试" class="headerlink" title="串口调试"></a>串口调试</h2><p> 由此开始，连接互联网的大幕即将开启！<br>首先推荐几个国内比较不错的物联网平台：乐为物联网、贝壳物联、yeelink（我可没收广告费！做项目的过程中对我们帮助不小，免费广告下），先去注册吧，注册时记住几个地方 “userkey” 、 “deviceKey” 、 “tcpID” ，本次测试基于乐为物联网平台。<br>接着前面发送 “AT” 后返回 “ok” 的那步，依次输入（注意不能有空格，每次执行等几秒待执行完毕，不返回error就没问题）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">AT//test AT launch?</div><div class="line">AT+RST//restart</div><div class="line">AT+CWMODE=3//设置ap+st混合模式</div><div class="line">AT+CWJAP=“wifiName”,”wifiPassword”</div><div class="line">AT+CIFSR//返回本地 ip 地址</div><div class="line">AT+CIPMUX=0//启动单路连接模式</div><div class="line">AT+CIPMODE=1//设置模块传输模式为透传模式</div><div class="line">AT+CIOBAUD=9600//修改模块波特率为9600，这步是为了方便之后用Arduino串口与模块通信，执行后需要将串口调试助手波特率改为9600</div><div class="line">AT+CIPSTART=&quot;TCP&quot;,&quot;tcp.lewei50.com&quot;,9960／／建立tcp连接</div><div class="line">AT+CIPSEND//发送数据</div><div class="line">&#123;&quot;method&quot;:&quot;update&quot;,&quot;gatewayNo”:“xxx”,”userkey”:”xxxxxx”&#125;&amp;^!</div><div class="line">//数据内容（几行都是一个整体，不能回车或空格！）</div><div class="line">&#123;&quot;method&quot;:&quot;upload&quot;,&quot;data&quot;:[&#123;&quot;Name&quot;:&quot;1&quot;,&quot;Value&quot;:&quot;33&quot;&#125;,&#123;&quot;Name&quot;:&quot;2&quot;,&quot;Value&quot;:&quot;96.2&quot;&#125;,&#123;&quot;Name&quot;:&quot;3&quot;,&quot;Value&quot;:&quot;710&quot;&#125;]&#125;&amp;^!</div></pre></td></tr></table></figure></p>
<p><code>gatewayNo</code>后面的内容为你注册时自定义的设备标识，<code>userkey</code>后面的内容为你独一无二的用户 ID，<code>name</code> 为自定义的传感器标识，<code>value</code>为发送给服务器的传感器的值<br>若以上几步均没有问题，恭喜你！但是手动输入是不是很麻烦？接下来就是写入 Arduino，让 Arduino 代替你来执行这些命令了！</p>
<h2 id="写入-Arduino"><a href="#写入-Arduino" class="headerlink" title="写入 Arduino"></a>写入 Arduino</h2><p><a href="https://github.com/thirtyyuan/Ardiuno/tree/ArduinoTcp" target="_blank" rel="external">源码地址</a>,<br>个人觉得源码已经留好了接口，可修改性很强，若实在不懂的请联系我。修改链接里的代码，按照前面AT指令里修改的<code>userkey</code>等地方即可，为了数据曲线看上去光滑美观，加了<code>timer</code>计数器和<code>millis()</code>函数，测试时为了尽快看到是否连接网络，注释相关代码即可，注意括号要成对注释！（若有其它模块，则可能电脑USB电压供电不足，需要烧入代码后用手机充电插头接在电源线一段供电）<br>将 USB-TTL 的 TTL 端的接线一对一接到 Arduino 板上，将修改后代码烧入 Arduino 板即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;挑选联网模块&quot;&gt;&lt;a href=&quot;#挑选联网模块&quot; class=&quot;headerlink&quot; title=&quot;挑选联网模块&quot;&gt;&lt;/a&gt;挑选联网模块&lt;/h2&gt;&lt;p&gt;Arduino联网根据联网是否需要在wifi附近分为两种不同形式：wifi模块（附近需要wifi源），GPRS模块（通过手机卡的GPRS信号联网）。具体需要用何种模块，需要看你产品的使用环境，如果是在家、厂里或附近（一般不超过20米，否则效果不好），则可以使用wifi模块，这样就不需要多买一张SIM卡。产品若要工作在室外，则不得不使用GPRS模块了。
    
    </summary>
    
      <category term="Arduino" scheme="http://thirtyyuan.github.io/categories/Arduino/"/>
    
    
      <category term="乐联网平台" scheme="http://thirtyyuan.github.io/tags/%E4%B9%90%E8%81%94%E7%BD%91%E5%B9%B3%E5%8F%B0/"/>
    
      <category term="物联网" scheme="http://thirtyyuan.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>如果我能成为一名海盗</title>
    <link href="http://thirtyyuan.github.io/2015/11/30/%E5%A6%82%E6%9E%9C%E6%88%91%E8%83%BD%E6%88%90%E4%B8%BA%E4%B8%80%E5%90%8D%E6%B5%B7%E7%9B%97/"/>
    <id>http://thirtyyuan.github.io/2015/11/30/如果我能成为一名海盗/</id>
    <published>2015-11-30T07:16:21.000Z</published>
    <updated>2016-12-25T07:27:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ww4.sinaimg.cn/large/006tNbRwgw1fb329nz6k8j307705e0t1.jpg" alt="杰克斯派洛"><a id="more"></a><br>在19世纪的加勒比海上，流传着一个不朽的海盗的名字——杰克·斯派诺，他是人们心中自由与智慧的象征。他不屈服于权威，率领着黑珍珠号上的船员们击溃过英国皇家海军；他不惧强敌，公然与让人闻风丧胆的“鬼船”船长戴维·琼斯为敌，用利刃刺过戴维·琼斯的不死之心。一切的胜利，除了智慧与幸运的因素之外，他还有一件别人看来无用而可笑的法宝——一个失去了指向性的指南针，但它却可以指向你心里所想的事物和地点。</p>
<p>他的每次扬帆出行在别人看来都是盲目的，因为他根本没有地图甚至任何地理坐标，所以他在人们眼中可能和疯子没什么区别。但他自己知道，他要去的，就是他心里想的地方，任凭别人如何嘲笑他，他也会坚定向前，朝着他心里所想的地方远行。</p>
<p>在20世纪的美国西部，也有这样一位“海盗船长”——史蒂夫·乔布斯。他是许多人的精神偶像，甚至有斯坦福大学的学生因为听了他的毕业演讲而放弃了待遇优厚的工作，投身于社会福利事业中，要知道，乔布斯只读了6个月的大学。与杰克船长一样，他也是一位不屈服于权威、不惧强敌的“海盗船长”。<img src="https://ww2.sinaimg.cn/large/006tNbRwgw1fb32afqoewj30fa0atmxu.jpg" alt="史蒂夫·乔布斯"></p>
<p>在苹果公司全力开发丽萨电脑期间，他不顾董事会的反对，带领他的团队开发了一款性能相近，但售价却更加亲民的Mac电脑与本公司的丽萨团队形成竞争。甚至公然在办公楼上悬挂了一面海盗旗，向丽萨团队和苹果管理层那些他看来是因循守旧的“海军”宣战。<br>面对强大的“蓝色巨人”英特尔，发出了一则题为“为什么1984不会成为所谓的1984”的广告，将因特尔比作步伐缓慢、有着无数人信奉的独裁“教主”，一位链球运动员将一把大锤砸向正在播放“教主”宣讲画面的大屏幕，以示人们“苹果将会打破个人电脑市场将在1984年被英特尔垄断的预言。而最终，整个苹果公司的个人电脑市场份额也得以继续提高，直到现在，Mac电脑依旧占据了个人电脑领域举足轻重的市场份额。</p>
<p>当他重返苹果时，他依旧爱着这个他一手培养、中途却抛弃过他的孩子，他依旧是如此的桀骜不驯，执掌着一个快要破产的公司，却向世人抛出了“非同凡想”广告以示一个属于他的那个变革的时代即将到来。“向那些疯狂的家伙致敬……或许他们是别人眼里的疯子，但却是我们眼中的天才。因为只有那些疯狂到以为自己能够改变世界的人才能真正的改变世界”。</p>
<p>“为什么要做海军？如果你能成为一名海盗的话。”我们在生活中不可避免的会面对如此让人难以选择的情况，究竟怎样取舍完全取决于自己。而我，则会义无反顾的成为一名海盗，因为我知道直觉大多是正确而完全不违背本心的，我相信，我的那枚“失灵”了的指南针终会随着我的心，将我带向充满阳光的彼岸，也正因为那是我心之所向的地方，一路上即使有再多的苦难也将是愉快而值得骄傲的。<br>                                                                               ——by：thirtyyuan<br>                                                                                         2015.11.30</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ww4.sinaimg.cn/large/006tNbRwgw1fb329nz6k8j307705e0t1.jpg&quot; alt=&quot;杰克斯派洛&quot;&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
